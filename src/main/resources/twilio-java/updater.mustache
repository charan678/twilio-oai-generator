{{>licenseInfo}}
package {{package}};

import com.twilio.base.Updater;
import com.twilio.converter.Promoter;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;

{{#resources}}
{{>model}}
{{#operations}}
{{#vendorExtensions.x-is-update-operation}}
public class {{resourceName}}Updater extends Updater<{{resourceName}}>{
{{#allParams}}
    private {{dataType}} {{paramName}};

    public {{resourceName}}Updater set{{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}(final {{dataType}} {{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}){
        this.{{paramName}} = {{paramName}};
        return this;
    }
{{/allParams}}

    @Override
    public {{resourceName}} update(final TwilioRestClient client){
        Request request = new Request(
            HttpMethod.POST,
            Domains.{{#lambda.uppercase}}{{domain}}{{/lambda.uppercase}}.toString(),
            "{{path}}"
        )

        addPostParams(request);
        Response response = client.request(request);
        if (response == null) {
            throw new ApiConnectionException("{{resourceName}} update failed: Unable to connect to server");
        } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {
            RestException restException = RestException.fromJson(response.getStream(), client.getObjectMapper());
            if (restException == null) {
                throw new ApiException("Server Error, no content");
            }
            throw new ApiException(restException);
        }

        return {{resourceName}}.fromJson(response.getStream(), client.getObjectMapper());
    }


    private void addPostParams(final Request request) {
{{#allParams}}
        if ({{paramName}} != null) {
            request.addPostParam("{{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}", {{paramName}});
        }
{{/allParams}}
    }
}
{{/vendorExtensions.x-is-update-operation}}
{{/operations}}
{{/resources}}
